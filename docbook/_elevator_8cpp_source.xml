<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__elevator_8cpp_source" xml:lang="en-US">
<title>Elevator.cpp</title>
<indexterm><primary>src/main/cpp/subsystems/Elevator.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__elevator_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__elevator_8h">subsystems/Elevator.h</link>&quot;</emphasis>
<anchor xml:id="__elevator_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&lt;frc/smartdashboard/SmartDashboard.h&gt;</emphasis>
<anchor xml:id="__elevator_8cpp_source_1l00003"/>00003 
<anchor xml:id="__elevator_8cpp_source_1l00004"/><link linkend="_class_elevator_1a42ec2949d6e5f9bf90c361933562eb5f">00004</link> <link linkend="_class_elevator_1a42ec2949d6e5f9bf90c361933562eb5f">Elevator::Elevator</link>()
<anchor xml:id="__elevator_8cpp_source_1l00005"/>00005 {
<anchor xml:id="__elevator_8cpp_source_1l00006"/>00006 &#32;&#32;&#32;&#32;m_encoder.SetDistancePerPulse(<link linkend="__constants_8h_1a9cf2d4acf51ffea81c7d6251406511e5">k_elevatorDPR</link>);
<anchor xml:id="__elevator_8cpp_source_1l00007"/>00007 }
<anchor xml:id="__elevator_8cpp_source_1l00008"/>00008 
<anchor xml:id="__elevator_8cpp_source_1l00009"/><link linkend="_class_elevator_1a12003fa3be947d811a004cb0b69d9a69">00009</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_elevator_1a12003fa3be947d811a004cb0b69d9a69">Elevator::Periodic</link>()
<anchor xml:id="__elevator_8cpp_source_1l00010"/>00010 {
<anchor xml:id="__elevator_8cpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!m_keepingStill)
<anchor xml:id="__elevator_8cpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;{
<anchor xml:id="__elevator_8cpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_height&#32;=&#32;<link linkend="_class_elevator_1acee7586b6e918e0d39aad91ca88f6d15">GetHeight</link>();
<anchor xml:id="__elevator_8cpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;}
<anchor xml:id="__elevator_8cpp_source_1l00015"/>00015 
<anchor xml:id="__elevator_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;m_keepingStill&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__elevator_8cpp_source_1l00017"/>00017 }
<anchor xml:id="__elevator_8cpp_source_1l00018"/>00018 
<anchor xml:id="__elevator_8cpp_source_1l00019"/>00019 <emphasis role="comment">//&#32;----------&#32;Actions&#32;-----------</emphasis>
<anchor xml:id="__elevator_8cpp_source_1l00020"/>00020 
<anchor xml:id="__elevator_8cpp_source_1l00021"/><link linkend="_class_elevator_1a1e734d3f2a97bbec15f1fd0a8a9760ae">00021</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_elevator_1a1e734d3f2a97bbec15f1fd0a8a9760ae">Elevator::Reset</link>()
<anchor xml:id="__elevator_8cpp_source_1l00022"/>00022 {
<anchor xml:id="__elevator_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<link linkend="_class_elevator_1a6d3f621dae6f07c3a45be0a83139f635">ResetEncoder</link>();
<anchor xml:id="__elevator_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<link linkend="_class_elevator_1a598ec942f895c71b6397b9d4c1d92e84">ResetHeightPID</link>();
<anchor xml:id="__elevator_8cpp_source_1l00025"/>00025 }
<anchor xml:id="__elevator_8cpp_source_1l00026"/>00026 
<anchor xml:id="__elevator_8cpp_source_1l00027"/><link linkend="_class_elevator_1a51844ef540f210c16fafb8323eefa3cf">00027</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_elevator_1a51844ef540f210c16fafb8323eefa3cf">Elevator::Move</link>(<emphasis role="keywordtype">double</emphasis>&#32;speed)
<anchor xml:id="__elevator_8cpp_source_1l00028"/>00028 {
<anchor xml:id="__elevator_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<link linkend="_class_elevator_1a0c5262a47e8afdfdaf45af1e39518244">SetMotor</link>(speed);
<anchor xml:id="__elevator_8cpp_source_1l00030"/>00030 }
<anchor xml:id="__elevator_8cpp_source_1l00031"/>00031 
<anchor xml:id="__elevator_8cpp_source_1l00032"/><link linkend="_class_elevator_1a689bff16dc6190ae073abc72ab15f11f">00032</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_elevator_1a689bff16dc6190ae073abc72ab15f11f">Elevator::KeepStill</link>()
<anchor xml:id="__elevator_8cpp_source_1l00033"/>00033 {
<anchor xml:id="__elevator_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;m_keepingStill&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__elevator_8cpp_source_1l00035"/>00035 
<anchor xml:id="__elevator_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<link linkend="_class_elevator_1a0bc80fbc45bfb0bc8eacfe43217b2b8b">SetHeight</link>(m_height);
<anchor xml:id="__elevator_8cpp_source_1l00037"/>00037 }
<anchor xml:id="__elevator_8cpp_source_1l00038"/>00038 
<anchor xml:id="__elevator_8cpp_source_1l00039"/>00039 <emphasis role="comment">//&#32;---------&#32;Motor&#32;---------</emphasis>
<anchor xml:id="__elevator_8cpp_source_1l00040"/>00040 
<anchor xml:id="__elevator_8cpp_source_1l00041"/><link linkend="_class_elevator_1a0c5262a47e8afdfdaf45af1e39518244">00041</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_elevator_1a0c5262a47e8afdfdaf45af1e39518244">Elevator::SetMotor</link>(<emphasis role="keywordtype">double</emphasis>&#32;speed)
<anchor xml:id="__elevator_8cpp_source_1l00042"/>00042 {
<anchor xml:id="__elevator_8cpp_source_1l00043"/>00043 
<anchor xml:id="__elevator_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_limitSafety)
<anchor xml:id="__elevator_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;{
<anchor xml:id="__elevator_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_elevator_1ad4e88b3752b1c5afea34bea0b10a8d1b">GetTopLimit</link>())
<anchor xml:id="__elevator_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__elevator_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;speed&#32;=&#32;fmin(speed,&#32;0);
<anchor xml:id="__elevator_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__elevator_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_elevator_1adfb113f3762495292f318880ef7f4002">GetBottomLimit</link>())
<anchor xml:id="__elevator_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__elevator_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;speed&#32;=&#32;fmax(speed,&#32;0);
<anchor xml:id="__elevator_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__elevator_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;}
<anchor xml:id="__elevator_8cpp_source_1l00055"/>00055 
<anchor xml:id="__elevator_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_heightSafety)
<anchor xml:id="__elevator_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;{
<anchor xml:id="__elevator_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_elevator_1acee7586b6e918e0d39aad91ca88f6d15">GetHeight</link>()&#32;&gt;=&#32;<link linkend="__constants_8h_1ab6009cb18d59859ca3c3baa33218b964">k_elevatorMaxHeight</link>)
<anchor xml:id="__elevator_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__elevator_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;speed&#32;=&#32;fmin(speed,&#32;0);
<anchor xml:id="__elevator_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__elevator_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_elevator_1acee7586b6e918e0d39aad91ca88f6d15">GetHeight</link>()&#32;&lt;=&#32;<link linkend="__constants_8h_1ae4bd488825d1a9f6e7f33c0e97fe9fb2">k_elevatorMinHeight</link>)
<anchor xml:id="__elevator_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__elevator_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;speed&#32;=&#32;fmax(speed,&#32;0);
<anchor xml:id="__elevator_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__elevator_8cpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;}
<anchor xml:id="__elevator_8cpp_source_1l00067"/>00067 
<anchor xml:id="__elevator_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;m_motor.Set(speed);
<anchor xml:id="__elevator_8cpp_source_1l00069"/>00069 }
<anchor xml:id="__elevator_8cpp_source_1l00070"/>00070 
<anchor xml:id="__elevator_8cpp_source_1l00071"/><link linkend="_class_elevator_1a72c67a1690571e255c2d0518bd8fd170">00071</link> <emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_class_elevator_1a72c67a1690571e255c2d0518bd8fd170">Elevator::GetMotor</link>()
<anchor xml:id="__elevator_8cpp_source_1l00072"/>00072 {
<anchor xml:id="__elevator_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_motor.Get();
<anchor xml:id="__elevator_8cpp_source_1l00074"/>00074 }
<anchor xml:id="__elevator_8cpp_source_1l00075"/>00075 
<anchor xml:id="__elevator_8cpp_source_1l00076"/><link linkend="_class_elevator_1a93c1e8836f021d0bf252d53bcc8bebe2">00076</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_elevator_1a93c1e8836f021d0bf252d53bcc8bebe2">Elevator::InvertMotor</link>(<emphasis role="keywordtype">bool</emphasis>&#32;invert)
<anchor xml:id="__elevator_8cpp_source_1l00077"/>00077 {
<anchor xml:id="__elevator_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;m_motor.SetInverted(invert);
<anchor xml:id="__elevator_8cpp_source_1l00079"/>00079 }
<anchor xml:id="__elevator_8cpp_source_1l00080"/>00080 
<anchor xml:id="__elevator_8cpp_source_1l00081"/><link linkend="_class_elevator_1a97e1607efd1c33580091049eca0f58f0">00081</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_elevator_1a97e1607efd1c33580091049eca0f58f0">Elevator::PrintMotor</link>()
<anchor xml:id="__elevator_8cpp_source_1l00082"/>00082 {
<anchor xml:id="__elevator_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;SmartDashboard::PutNumber(<emphasis role="stringliteral">&quot;Elevator&#32;Motor&quot;</emphasis>,&#32;<link linkend="_class_elevator_1a72c67a1690571e255c2d0518bd8fd170">GetMotor</link>());
<anchor xml:id="__elevator_8cpp_source_1l00084"/>00084 }
<anchor xml:id="__elevator_8cpp_source_1l00085"/>00085 
<anchor xml:id="__elevator_8cpp_source_1l00086"/>00086 <emphasis role="comment">//&#32;---------&#32;Encoder&#32;---------</emphasis>
<anchor xml:id="__elevator_8cpp_source_1l00087"/>00087 
<anchor xml:id="__elevator_8cpp_source_1l00088"/><link linkend="_class_elevator_1a16bfdaa2dbf0dbdbe5c2183616c0bbc1">00088</link> <emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_class_elevator_1a16bfdaa2dbf0dbdbe5c2183616c0bbc1">Elevator::GetEncoder</link>()
<anchor xml:id="__elevator_8cpp_source_1l00089"/>00089 {
<anchor xml:id="__elevator_8cpp_source_1l00090"/>00090 
<anchor xml:id="__elevator_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO&#32;:&#32;change&#32;if&#32;spark&#32;encoder</emphasis>
<anchor xml:id="__elevator_8cpp_source_1l00092"/>00092 
<anchor xml:id="__elevator_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;return&#32;m_encoder.GetPosition();</emphasis>
<anchor xml:id="__elevator_8cpp_source_1l00094"/>00094 
<anchor xml:id="__elevator_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_encoder.GetDistance();
<anchor xml:id="__elevator_8cpp_source_1l00096"/>00096 }
<anchor xml:id="__elevator_8cpp_source_1l00097"/>00097 
<anchor xml:id="__elevator_8cpp_source_1l00098"/><link linkend="_class_elevator_1a6d3f621dae6f07c3a45be0a83139f635">00098</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_elevator_1a6d3f621dae6f07c3a45be0a83139f635">Elevator::ResetEncoder</link>()
<anchor xml:id="__elevator_8cpp_source_1l00099"/>00099 {
<anchor xml:id="__elevator_8cpp_source_1l00100"/>00100 
<anchor xml:id="__elevator_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO&#32;:&#32;change&#32;if&#32;spark&#32;encoder</emphasis>
<anchor xml:id="__elevator_8cpp_source_1l00102"/>00102 
<anchor xml:id="__elevator_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_encoder.SetPosition(0);</emphasis>
<anchor xml:id="__elevator_8cpp_source_1l00104"/>00104 
<anchor xml:id="__elevator_8cpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;m_encoder.Reset();
<anchor xml:id="__elevator_8cpp_source_1l00106"/>00106 }
<anchor xml:id="__elevator_8cpp_source_1l00107"/>00107 
<anchor xml:id="__elevator_8cpp_source_1l00108"/><link linkend="_class_elevator_1ab1dcbf97fc77cc45df007d7a06a574c7">00108</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_elevator_1ab1dcbf97fc77cc45df007d7a06a574c7">Elevator::InvertEncoder</link>(<emphasis role="keywordtype">bool</emphasis>&#32;invert)
<anchor xml:id="__elevator_8cpp_source_1l00109"/>00109 {
<anchor xml:id="__elevator_8cpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO&#32;:&#32;change&#32;if&#32;spark&#32;encoder</emphasis>
<anchor xml:id="__elevator_8cpp_source_1l00111"/>00111 
<anchor xml:id="__elevator_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_encoder.SetInverted(invert);</emphasis>
<anchor xml:id="__elevator_8cpp_source_1l00113"/>00113 
<anchor xml:id="__elevator_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;m_encoder.SetReverseDirection(invert);
<anchor xml:id="__elevator_8cpp_source_1l00115"/>00115 }
<anchor xml:id="__elevator_8cpp_source_1l00116"/>00116 
<anchor xml:id="__elevator_8cpp_source_1l00117"/><link linkend="_class_elevator_1ad17b7cbd77ca1aec9e94705fb4142694">00117</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_elevator_1ad17b7cbd77ca1aec9e94705fb4142694">Elevator::PrintEncoder</link>()
<anchor xml:id="__elevator_8cpp_source_1l00118"/>00118 {
<anchor xml:id="__elevator_8cpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;SmartDashboard::PutNumber(<emphasis role="stringliteral">&quot;Elevator&#32;Encoder&quot;</emphasis>,&#32;<link linkend="_class_elevator_1a16bfdaa2dbf0dbdbe5c2183616c0bbc1">GetEncoder</link>());
<anchor xml:id="__elevator_8cpp_source_1l00120"/>00120 }
<anchor xml:id="__elevator_8cpp_source_1l00121"/>00121 
<anchor xml:id="__elevator_8cpp_source_1l00122"/>00122 <emphasis role="comment">//&#32;----------&#32;Height&#32;---------</emphasis>
<anchor xml:id="__elevator_8cpp_source_1l00123"/>00123 
<anchor xml:id="__elevator_8cpp_source_1l00124"/><link linkend="_class_elevator_1a0bc80fbc45bfb0bc8eacfe43217b2b8b">00124</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_elevator_1a0bc80fbc45bfb0bc8eacfe43217b2b8b">Elevator::SetHeight</link>(<emphasis role="keywordtype">double</emphasis>&#32;height)
<anchor xml:id="__elevator_8cpp_source_1l00125"/>00125 {
<anchor xml:id="__elevator_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(height&#32;&gt;=&#32;<link linkend="__constants_8h_1ae4bd488825d1a9f6e7f33c0e97fe9fb2">k_elevatorMinHeight</link>&#32;&amp;&amp;&#32;height&#32;&lt;=&#32;<link linkend="__constants_8h_1ab6009cb18d59859ca3c3baa33218b964">k_elevatorMaxHeight</link>)
<anchor xml:id="__elevator_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;{
<anchor xml:id="__elevator_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_heightPID.SetSetpoint(height);
<anchor xml:id="__elevator_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;output&#32;=&#32;m_heightPID.Calculate(<link linkend="_class_elevator_1acee7586b6e918e0d39aad91ca88f6d15">GetHeight</link>());
<anchor xml:id="__elevator_8cpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_elevator_1a0c5262a47e8afdfdaf45af1e39518244">SetMotor</link>(std::clamp(output,&#32;-<link linkend="__constants_8h_1a60b8d1310958fa8204579c02ba3db2fb">k_elevatorMaxSpeed</link>,&#32;<link linkend="__constants_8h_1a60b8d1310958fa8204579c02ba3db2fb">k_elevatorMaxSpeed</link>));
<anchor xml:id="__elevator_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_heightPID.AtSetpoint();
<anchor xml:id="__elevator_8cpp_source_1l00132"/>00132 &#32;&#32;&#32;&#32;}
<anchor xml:id="__elevator_8cpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__elevator_8cpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;{
<anchor xml:id="__elevator_8cpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__elevator_8cpp_source_1l00136"/>00136 &#32;&#32;&#32;&#32;}
<anchor xml:id="__elevator_8cpp_source_1l00137"/>00137 }
<anchor xml:id="__elevator_8cpp_source_1l00138"/>00138 
<anchor xml:id="__elevator_8cpp_source_1l00139"/><link linkend="_class_elevator_1acee7586b6e918e0d39aad91ca88f6d15">00139</link> <emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_class_elevator_1acee7586b6e918e0d39aad91ca88f6d15">Elevator::GetHeight</link>()
<anchor xml:id="__elevator_8cpp_source_1l00140"/>00140 {
<anchor xml:id="__elevator_8cpp_source_1l00141"/>00141 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_elevator_1a16bfdaa2dbf0dbdbe5c2183616c0bbc1">GetEncoder</link>();&#32;<emphasis role="comment">//&#32;TODO&#32;:&#32;change&#32;if&#32;there&#32;is&#32;offset</emphasis>
<anchor xml:id="__elevator_8cpp_source_1l00142"/>00142 }
<anchor xml:id="__elevator_8cpp_source_1l00143"/>00143 
<anchor xml:id="__elevator_8cpp_source_1l00144"/><link linkend="_class_elevator_1a598ec942f895c71b6397b9d4c1d92e84">00144</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_elevator_1a598ec942f895c71b6397b9d4c1d92e84">Elevator::ResetHeightPID</link>()
<anchor xml:id="__elevator_8cpp_source_1l00145"/>00145 {
<anchor xml:id="__elevator_8cpp_source_1l00146"/>00146 &#32;&#32;&#32;&#32;m_heightPID.Reset();
<anchor xml:id="__elevator_8cpp_source_1l00147"/>00147 }
<anchor xml:id="__elevator_8cpp_source_1l00148"/>00148 
<anchor xml:id="__elevator_8cpp_source_1l00149"/><link linkend="_class_elevator_1aa0127947145b4b422c71df50596bb603">00149</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_elevator_1aa0127947145b4b422c71df50596bb603">Elevator::PrintHeight</link>()
<anchor xml:id="__elevator_8cpp_source_1l00150"/>00150 {
<anchor xml:id="__elevator_8cpp_source_1l00151"/>00151 &#32;&#32;&#32;&#32;SmartDashboard::PutNumber(<emphasis role="stringliteral">&quot;Elevator&#32;Height&quot;</emphasis>,&#32;<link linkend="_class_elevator_1acee7586b6e918e0d39aad91ca88f6d15">GetHeight</link>());
<anchor xml:id="__elevator_8cpp_source_1l00152"/>00152 }
<anchor xml:id="__elevator_8cpp_source_1l00153"/>00153 
<anchor xml:id="__elevator_8cpp_source_1l00154"/><link linkend="_class_elevator_1a297e8d759f282ad37dddb8b1d2c4cbd5">00154</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_elevator_1a297e8d759f282ad37dddb8b1d2c4cbd5">Elevator::PrintHeightPIDError</link>()
<anchor xml:id="__elevator_8cpp_source_1l00155"/>00155 {
<anchor xml:id="__elevator_8cpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;SmartDashboard::PutNumber(<emphasis role="stringliteral">&quot;Elevator&#32;Height&#32;PID&#32;Error&quot;</emphasis>,&#32;m_heightPID.GetPositionError());
<anchor xml:id="__elevator_8cpp_source_1l00157"/>00157 }
<anchor xml:id="__elevator_8cpp_source_1l00158"/>00158 
<anchor xml:id="__elevator_8cpp_source_1l00159"/>00159 <emphasis role="comment">//&#32;----------&#32;Limits&#32;---------</emphasis>
<anchor xml:id="__elevator_8cpp_source_1l00160"/>00160 
<anchor xml:id="__elevator_8cpp_source_1l00161"/><link linkend="_class_elevator_1ad4e88b3752b1c5afea34bea0b10a8d1b">00161</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_elevator_1ad4e88b3752b1c5afea34bea0b10a8d1b">Elevator::GetTopLimit</link>()
<anchor xml:id="__elevator_8cpp_source_1l00162"/>00162 {
<anchor xml:id="__elevator_8cpp_source_1l00163"/>00163 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_limitSwitchTop.Get();
<anchor xml:id="__elevator_8cpp_source_1l00164"/>00164 }
<anchor xml:id="__elevator_8cpp_source_1l00165"/>00165 
<anchor xml:id="__elevator_8cpp_source_1l00166"/><link linkend="_class_elevator_1adfb113f3762495292f318880ef7f4002">00166</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_elevator_1adfb113f3762495292f318880ef7f4002">Elevator::GetBottomLimit</link>()
<anchor xml:id="__elevator_8cpp_source_1l00167"/>00167 {
<anchor xml:id="__elevator_8cpp_source_1l00168"/>00168 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_limitSwitchBottom.Get();
<anchor xml:id="__elevator_8cpp_source_1l00169"/>00169 }
<anchor xml:id="__elevator_8cpp_source_1l00170"/>00170 
<anchor xml:id="__elevator_8cpp_source_1l00171"/><link linkend="_class_elevator_1a323c2178986e3aa87e40abd7c225c376">00171</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_elevator_1a323c2178986e3aa87e40abd7c225c376">Elevator::PrintLimits</link>()
<anchor xml:id="__elevator_8cpp_source_1l00172"/>00172 {
<anchor xml:id="__elevator_8cpp_source_1l00173"/>00173 &#32;&#32;&#32;&#32;SmartDashboard::PutBoolean(<emphasis role="stringliteral">&quot;Elevator&#32;Top&#32;Limit&quot;</emphasis>,&#32;<link linkend="_class_elevator_1ad4e88b3752b1c5afea34bea0b10a8d1b">GetTopLimit</link>());
<anchor xml:id="__elevator_8cpp_source_1l00174"/>00174 &#32;&#32;&#32;&#32;SmartDashboard::PutBoolean(<emphasis role="stringliteral">&quot;Elevator&#32;Bottom&#32;Limit&quot;</emphasis>,&#32;<link linkend="_class_elevator_1adfb113f3762495292f318880ef7f4002">GetBottomLimit</link>());
<anchor xml:id="__elevator_8cpp_source_1l00175"/>00175 }
<anchor xml:id="__elevator_8cpp_source_1l00176"/>00176 
<anchor xml:id="__elevator_8cpp_source_1l00177"/>00177 <emphasis role="comment">//&#32;---------&#32;Safety&#32;----------</emphasis>
<anchor xml:id="__elevator_8cpp_source_1l00178"/>00178 
<anchor xml:id="__elevator_8cpp_source_1l00179"/><link linkend="_class_elevator_1a688309e16233723a4b71a6776d5c1d9f">00179</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_elevator_1a688309e16233723a4b71a6776d5c1d9f">Elevator::SetLimitSafetyActive</link>(<emphasis role="keywordtype">bool</emphasis>&#32;active)
<anchor xml:id="__elevator_8cpp_source_1l00180"/>00180 {
<anchor xml:id="__elevator_8cpp_source_1l00181"/>00181 &#32;&#32;&#32;&#32;m_limitSafety&#32;=&#32;active;
<anchor xml:id="__elevator_8cpp_source_1l00182"/>00182 }
<anchor xml:id="__elevator_8cpp_source_1l00183"/>00183 
<anchor xml:id="__elevator_8cpp_source_1l00184"/><link linkend="_class_elevator_1afae4e27835b0ca27d6578c024df41576">00184</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_elevator_1afae4e27835b0ca27d6578c024df41576">Elevator::SetHeightSafetyActive</link>(<emphasis role="keywordtype">bool</emphasis>&#32;active)
<anchor xml:id="__elevator_8cpp_source_1l00185"/>00185 {
<anchor xml:id="__elevator_8cpp_source_1l00186"/>00186 &#32;&#32;&#32;&#32;m_heightSafety&#32;=&#32;active;
<anchor xml:id="__elevator_8cpp_source_1l00187"/>00187 }
</programlisting></section>
