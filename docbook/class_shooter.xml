<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_shooter" xml:lang="en-US">
<title>Shooter Class Reference</title>
<indexterm><primary>Shooter</primary></indexterm>
<para>
<computeroutput>#include &lt;Shooter.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for Shooter:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_shooter.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_shooter_1acc429ebafcc36bb592c752097c22657f">Shooter</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_shooter_1a2724023e11346b0bbdd9ed42006b7ff0">Periodic</link> () override</para>
</listitem>
            <listitem><para>void <link linkend="_class_shooter_1ac7cef43d52b4164973e3e10930076794">Reset</link> ()</para>

<para>Resets systems. </para>
</listitem>
            <listitem><para>void <link linkend="_class_shooter_1a8aec07b9a84ed0727abddf356898e9b3">SetMotor</link> (double)</para>

<para>Sets the Motor speed. </para>
</listitem>
            <listitem><para>double <link linkend="_class_shooter_1ae46c0d81938a14f152b5ce98f801ffdb">GetMotor</link> ()</para>

<para>Gets the Motor speed. </para>
</listitem>
            <listitem><para>void <link linkend="_class_shooter_1a5ac1a254530a93fa6fa18294f8dabe27">InvertMotor</link> (bool)</para>

<para>Invert motor direction. </para>
</listitem>
            <listitem><para>void <link linkend="_class_shooter_1a66eb01e6f77792930c773702b23cee49">PrintMotor</link> ()</para>

<para>Publishes the motor speed to the dashboard. </para>
</listitem>
            <listitem><para>double <link linkend="_class_shooter_1a84e75a932a92bd33f5d5e72f66158b03">GetEncoder</link> ()</para>

<para>Get the Encoder value. </para>
</listitem>
            <listitem><para>void <link linkend="_class_shooter_1aa595c369250b14ef8eae01615bf2b64a">ResetEncoder</link> ()</para>

<para>Sets the encoder&apos;s value to 0. </para>
</listitem>
            <listitem><para>void <link linkend="_class_shooter_1a6fd5aca189d08d69c22e9dec55eba416">InvertEncoder</link> (bool)</para>

<para>Inverts the encoder&apos;s direction. </para>
</listitem>
            <listitem><para>void <link linkend="_class_shooter_1a3b628de0e1ad0a54b561bd566ae4b975">PrintEncoder</link> ()</para>

<para>Publishes the Encoder value to the dashboard. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_shooter_1a8288dd4cad5eb0f085745f853b25de93">ReachRPM</link> (double)</para>

<para>Sets the shooter&apos;s motor to a specified RPM. </para>
</listitem>
            <listitem><para>double <link linkend="_class_shooter_1a705647ab4ea9b26f938a3c949a1b3b26">CalculateRPM</link> ()</para>

<para>Calculates the required RPM depending on distance to target. </para>
</listitem>
            <listitem><para>void <link linkend="_class_shooter_1a001e7d840f9ccf3960d9889891ec2b54">ResetPID</link> ()</para>

<para>Resets RPM PID. </para>
</listitem>
            <listitem><para>void <link linkend="_class_shooter_1ac1ddd58052880f12e939363fd0ba253b">PrintPIDError</link> ()</para>

<para>Prints RPM PID error to the dashboard. </para>
</listitem>
            <listitem><para>void <link linkend="_class_shooter_1a34ded1f3ec76ecf22460a1c1d8f2674b">SetAngleServos</link> (double)</para>

<para>Sets the shooting angle by using servos. </para>
</listitem>
            <listitem><para>void <link linkend="_class_shooter_1ad8e07e828ef7f4e5f1af4776436b97ae">ResetServos</link> ()</para>

<para>Resets the angle servos to 0. </para>
</listitem>
            <listitem><para>double <link linkend="_class_shooter_1a553e8a885139e6ad6223a6d44fa932cc">GetRightServo</link> ()</para>

<para>Gets the length of the right servo. </para>
</listitem>
            <listitem><para>double <link linkend="_class_shooter_1a9741d799e6ebce9463cfd5c028f0ea63">GetLeftServo</link> ()</para>

<para>Gets the length of the left servo. </para>
</listitem>
            <listitem><para>void <link linkend="_class_shooter_1a7b744be3d8430e7fd9b2a011f110d34f">PrintServos</link> ()</para>

<para>Prints the length of the servos to the dashboard. </para>
</listitem>
            <listitem><para>void <link linkend="_class_shooter_1a25595e8df8cc799bc991ac94faf70f33">SetAngleSolenoids</link> (bool)</para>

<para>Sets the shooting angle by using solenoids. </para>
</listitem>
            <listitem><para>void <link linkend="_class_shooter_1aedf661e8bdbdcd020f4288864f7d81de">InvertSolenoids</link> ()</para>

<para>Inverts which value is open and closed. </para>
</listitem>
            <listitem><para>void <link linkend="_class_shooter_1a89acb718cbf766d2f606927b0601c473">SolenoidsOff</link> ()</para>

<para>Set the solenoids to kOff. </para>
</listitem>
            <listitem><para>int <link linkend="_class_shooter_1a3b76c25f3999d3a05e710e5170f2a642">GetRightSolenoid</link> ()</para>

<para>Gets the state of the right solenoid. </para>
</listitem>
            <listitem><para>int <link linkend="_class_shooter_1a4d070235a6b8f78255e73394b7918863">GetLeftSolenoid</link> ()</para>

<para>Gets the state of the left solenoid. </para>
</listitem>
            <listitem><para>void <link linkend="_class_shooter_1a4c3abb0e6f70f70d87f5f2d55b624d18">PrintSolenoids</link> ()</para>

<para>Prints the state of the solenoids to the dashboard. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="__shooter_8h_source_1l00018">18</link> of file <link linkend="__shooter_8h_source">Shooter.h</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_shooter_1acc429ebafcc36bb592c752097c22657f"/><section>
    <title>Shooter()</title>
<indexterm><primary>Shooter</primary><secondary>Shooter</secondary></indexterm>
<indexterm><primary>Shooter</primary><secondary>Shooter</secondary></indexterm>
<para><computeroutput>Shooter::Shooter ( )</computeroutput></para><para>
Definition at line <link linkend="__shooter_8cpp_source_1l00003">3</link> of file <link linkend="__shooter_8cpp_source">Shooter.cpp</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_shooter_1a705647ab4ea9b26f938a3c949a1b3b26"/><section>
    <title>CalculateRPM()</title>
<indexterm><primary>CalculateRPM</primary><secondary>Shooter</secondary></indexterm>
<indexterm><primary>Shooter</primary><secondary>CalculateRPM</secondary></indexterm>
<para><computeroutput>double Shooter::CalculateRPM ( )</computeroutput></para><para>

<para>Calculates the required RPM depending on distance to target. </para>
</para>

<para><formalpara><title>Returns</title>

<para>The required RPM </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__shooter_8cpp_source_1l00080">80</link> of file <link linkend="__shooter_8cpp_source">Shooter.cpp</link>.</para>
</section>
<anchor xml:id="_class_shooter_1a84e75a932a92bd33f5d5e72f66158b03"/><section>
    <title>GetEncoder()</title>
<indexterm><primary>GetEncoder</primary><secondary>Shooter</secondary></indexterm>
<indexterm><primary>Shooter</primary><secondary>GetEncoder</secondary></indexterm>
<para><computeroutput>double Shooter::GetEncoder ( )</computeroutput></para><para>

<para>Get the Encoder value. </para>
</para>

<para><formalpara><title>Returns</title>

<para>double </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__shooter_8cpp_source_1l00040">40</link> of file <link linkend="__shooter_8cpp_source">Shooter.cpp</link>.</para>
</section>
<anchor xml:id="_class_shooter_1a9741d799e6ebce9463cfd5c028f0ea63"/><section>
    <title>GetLeftServo()</title>
<indexterm><primary>GetLeftServo</primary><secondary>Shooter</secondary></indexterm>
<indexterm><primary>Shooter</primary><secondary>GetLeftServo</secondary></indexterm>
<para><computeroutput>double Shooter::GetLeftServo ( )</computeroutput></para><para>

<para>Gets the length of the left servo. </para>
</para>

<para><formalpara><title>Returns</title>

<para>The length of the left servo </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__shooter_8cpp_source_1l00112">112</link> of file <link linkend="__shooter_8cpp_source">Shooter.cpp</link>.</para>
</section>
<anchor xml:id="_class_shooter_1a4d070235a6b8f78255e73394b7918863"/><section>
    <title>GetLeftSolenoid()</title>
<indexterm><primary>GetLeftSolenoid</primary><secondary>Shooter</secondary></indexterm>
<indexterm><primary>Shooter</primary><secondary>GetLeftSolenoid</secondary></indexterm>
<para><computeroutput>int Shooter::GetLeftSolenoid ( )</computeroutput></para><para>

<para>Gets the state of the left solenoid. </para>
</para>
<para>
Definition at line <link linkend="__shooter_8cpp_source_1l00148">148</link> of file <link linkend="__shooter_8cpp_source">Shooter.cpp</link>.</para>
</section>
<anchor xml:id="_class_shooter_1ae46c0d81938a14f152b5ce98f801ffdb"/><section>
    <title>GetMotor()</title>
<indexterm><primary>GetMotor</primary><secondary>Shooter</secondary></indexterm>
<indexterm><primary>Shooter</primary><secondary>GetMotor</secondary></indexterm>
<para><computeroutput>double Shooter::GetMotor ( )</computeroutput></para><para>

<para>Gets the Motor speed. </para>
</para>
<para>
Definition at line <link linkend="__shooter_8cpp_source_1l00025">25</link> of file <link linkend="__shooter_8cpp_source">Shooter.cpp</link>.</para>
</section>
<anchor xml:id="_class_shooter_1a553e8a885139e6ad6223a6d44fa932cc"/><section>
    <title>GetRightServo()</title>
<indexterm><primary>GetRightServo</primary><secondary>Shooter</secondary></indexterm>
<indexterm><primary>Shooter</primary><secondary>GetRightServo</secondary></indexterm>
<para><computeroutput>double Shooter::GetRightServo ( )</computeroutput></para><para>

<para>Gets the length of the right servo. </para>
</para>

<para><formalpara><title>Returns</title>

<para>The length of the right servo </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__shooter_8cpp_source_1l00107">107</link> of file <link linkend="__shooter_8cpp_source">Shooter.cpp</link>.</para>
</section>
<anchor xml:id="_class_shooter_1a3b76c25f3999d3a05e710e5170f2a642"/><section>
    <title>GetRightSolenoid()</title>
<indexterm><primary>GetRightSolenoid</primary><secondary>Shooter</secondary></indexterm>
<indexterm><primary>Shooter</primary><secondary>GetRightSolenoid</secondary></indexterm>
<para><computeroutput>int Shooter::GetRightSolenoid ( )</computeroutput></para><para>

<para>Gets the state of the right solenoid. </para>
</para>
<para>
Definition at line <link linkend="__shooter_8cpp_source_1l00143">143</link> of file <link linkend="__shooter_8cpp_source">Shooter.cpp</link>.</para>
</section>
<anchor xml:id="_class_shooter_1a6fd5aca189d08d69c22e9dec55eba416"/><section>
    <title>InvertEncoder()</title>
<indexterm><primary>InvertEncoder</primary><secondary>Shooter</secondary></indexterm>
<indexterm><primary>Shooter</primary><secondary>InvertEncoder</secondary></indexterm>
<para><computeroutput>void Shooter::InvertEncoder (bool inverted)</computeroutput></para><para>

<para>Inverts the encoder&apos;s direction. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>invert</entry><entry>
<para>True to invert, false to not </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__shooter_8cpp_source_1l00056">56</link> of file <link linkend="__shooter_8cpp_source">Shooter.cpp</link>.</para>
</section>
<anchor xml:id="_class_shooter_1a5ac1a254530a93fa6fa18294f8dabe27"/><section>
    <title>InvertMotor()</title>
<indexterm><primary>InvertMotor</primary><secondary>Shooter</secondary></indexterm>
<indexterm><primary>Shooter</primary><secondary>InvertMotor</secondary></indexterm>
<para><computeroutput>void Shooter::InvertMotor (bool inverted)</computeroutput></para><para>

<para>Invert motor direction. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>invert</entry><entry>
<para>True to invert, false to not </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__shooter_8cpp_source_1l00030">30</link> of file <link linkend="__shooter_8cpp_source">Shooter.cpp</link>.</para>
</section>
<anchor xml:id="_class_shooter_1aedf661e8bdbdcd020f4288864f7d81de"/><section>
    <title>InvertSolenoids()</title>
<indexterm><primary>InvertSolenoids</primary><secondary>Shooter</secondary></indexterm>
<indexterm><primary>Shooter</primary><secondary>InvertSolenoids</secondary></indexterm>
<para><computeroutput>void Shooter::InvertSolenoids ( )</computeroutput></para><para>

<para>Inverts which value is open and closed. </para>
</para>
</section>
<anchor xml:id="_class_shooter_1a2724023e11346b0bbdd9ed42006b7ff0"/><section>
    <title>Periodic()</title>
<indexterm><primary>Periodic</primary><secondary>Shooter</secondary></indexterm>
<indexterm><primary>Shooter</primary><secondary>Periodic</secondary></indexterm>
<para><computeroutput>void Shooter::Periodic ( )<computeroutput>[override]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__shooter_8cpp_source_1l00009">9</link> of file <link linkend="__shooter_8cpp_source">Shooter.cpp</link>.</para>
</section>
<anchor xml:id="_class_shooter_1a3b628de0e1ad0a54b561bd566ae4b975"/><section>
    <title>PrintEncoder()</title>
<indexterm><primary>PrintEncoder</primary><secondary>Shooter</secondary></indexterm>
<indexterm><primary>Shooter</primary><secondary>PrintEncoder</secondary></indexterm>
<para><computeroutput>void Shooter::PrintEncoder ( )</computeroutput></para><para>

<para>Publishes the Encoder value to the dashboard. </para>
</para>
<para>
Definition at line <link linkend="__shooter_8cpp_source_1l00064">64</link> of file <link linkend="__shooter_8cpp_source">Shooter.cpp</link>.</para>
</section>
<anchor xml:id="_class_shooter_1a66eb01e6f77792930c773702b23cee49"/><section>
    <title>PrintMotor()</title>
<indexterm><primary>PrintMotor</primary><secondary>Shooter</secondary></indexterm>
<indexterm><primary>Shooter</primary><secondary>PrintMotor</secondary></indexterm>
<para><computeroutput>void Shooter::PrintMotor ( )</computeroutput></para><para>

<para>Publishes the motor speed to the dashboard. </para>
</para>
<para>
Definition at line <link linkend="__shooter_8cpp_source_1l00035">35</link> of file <link linkend="__shooter_8cpp_source">Shooter.cpp</link>.</para>
</section>
<anchor xml:id="_class_shooter_1ac1ddd58052880f12e939363fd0ba253b"/><section>
    <title>PrintPIDError()</title>
<indexterm><primary>PrintPIDError</primary><secondary>Shooter</secondary></indexterm>
<indexterm><primary>Shooter</primary><secondary>PrintPIDError</secondary></indexterm>
<para><computeroutput>void Shooter::PrintPIDError ( )</computeroutput></para><para>

<para>Prints RPM PID error to the dashboard. </para>
</para>
<para>
Definition at line <link linkend="__shooter_8cpp_source_1l00090">90</link> of file <link linkend="__shooter_8cpp_source">Shooter.cpp</link>.</para>
</section>
<anchor xml:id="_class_shooter_1a7b744be3d8430e7fd9b2a011f110d34f"/><section>
    <title>PrintServos()</title>
<indexterm><primary>PrintServos</primary><secondary>Shooter</secondary></indexterm>
<indexterm><primary>Shooter</primary><secondary>PrintServos</secondary></indexterm>
<para><computeroutput>void Shooter::PrintServos ( )</computeroutput></para><para>

<para>Prints the length of the servos to the dashboard. </para>
</para>
<para>
Definition at line <link linkend="__shooter_8cpp_source_1l00117">117</link> of file <link linkend="__shooter_8cpp_source">Shooter.cpp</link>.</para>
</section>
<anchor xml:id="_class_shooter_1a4c3abb0e6f70f70d87f5f2d55b624d18"/><section>
    <title>PrintSolenoids()</title>
<indexterm><primary>PrintSolenoids</primary><secondary>Shooter</secondary></indexterm>
<indexterm><primary>Shooter</primary><secondary>PrintSolenoids</secondary></indexterm>
<para><computeroutput>void Shooter::PrintSolenoids ( )</computeroutput></para><para>

<para>Prints the state of the solenoids to the dashboard. </para>
</para>
<para>
Definition at line <link linkend="__shooter_8cpp_source_1l00153">153</link> of file <link linkend="__shooter_8cpp_source">Shooter.cpp</link>.</para>
</section>
<anchor xml:id="_class_shooter_1a8288dd4cad5eb0f085745f853b25de93"/><section>
    <title>ReachRPM()</title>
<indexterm><primary>ReachRPM</primary><secondary>Shooter</secondary></indexterm>
<indexterm><primary>Shooter</primary><secondary>ReachRPM</secondary></indexterm>
<para><computeroutput>bool Shooter::ReachRPM (double rpm)</computeroutput></para><para>

<para>Sets the shooter&apos;s motor to a specified RPM. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>rpm</entry><entry>
<para>The RPM to set the motor to </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>If the motor has reached the RPM </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__shooter_8cpp_source_1l00069">69</link> of file <link linkend="__shooter_8cpp_source">Shooter.cpp</link>.</para>
</section>
<anchor xml:id="_class_shooter_1ac7cef43d52b4164973e3e10930076794"/><section>
    <title>Reset()</title>
<indexterm><primary>Reset</primary><secondary>Shooter</secondary></indexterm>
<indexterm><primary>Shooter</primary><secondary>Reset</secondary></indexterm>
<para><computeroutput>void Shooter::Reset ( )</computeroutput></para><para>

<para>Resets systems. </para>
</para>
<para>
Definition at line <link linkend="__shooter_8cpp_source_1l00013">13</link> of file <link linkend="__shooter_8cpp_source">Shooter.cpp</link>.</para>
</section>
<anchor xml:id="_class_shooter_1aa595c369250b14ef8eae01615bf2b64a"/><section>
    <title>ResetEncoder()</title>
<indexterm><primary>ResetEncoder</primary><secondary>Shooter</secondary></indexterm>
<indexterm><primary>Shooter</primary><secondary>ResetEncoder</secondary></indexterm>
<para><computeroutput>void Shooter::ResetEncoder ( )</computeroutput></para><para>

<para>Sets the encoder&apos;s value to 0. </para>
</para>
<para>
Definition at line <link linkend="__shooter_8cpp_source_1l00048">48</link> of file <link linkend="__shooter_8cpp_source">Shooter.cpp</link>.</para>
</section>
<anchor xml:id="_class_shooter_1a001e7d840f9ccf3960d9889891ec2b54"/><section>
    <title>ResetPID()</title>
<indexterm><primary>ResetPID</primary><secondary>Shooter</secondary></indexterm>
<indexterm><primary>Shooter</primary><secondary>ResetPID</secondary></indexterm>
<para><computeroutput>void Shooter::ResetPID ( )</computeroutput></para><para>

<para>Resets RPM PID. </para>
</para>
<para>
Definition at line <link linkend="__shooter_8cpp_source_1l00085">85</link> of file <link linkend="__shooter_8cpp_source">Shooter.cpp</link>.</para>
</section>
<anchor xml:id="_class_shooter_1ad8e07e828ef7f4e5f1af4776436b97ae"/><section>
    <title>ResetServos()</title>
<indexterm><primary>ResetServos</primary><secondary>Shooter</secondary></indexterm>
<indexterm><primary>Shooter</primary><secondary>ResetServos</secondary></indexterm>
<para><computeroutput>void Shooter::ResetServos ( )</computeroutput></para><para>

<para>Resets the angle servos to 0. </para>
</para>
<para>
Definition at line <link linkend="__shooter_8cpp_source_1l00101">101</link> of file <link linkend="__shooter_8cpp_source">Shooter.cpp</link>.</para>
</section>
<anchor xml:id="_class_shooter_1a34ded1f3ec76ecf22460a1c1d8f2674b"/><section>
    <title>SetAngleServos()</title>
<indexterm><primary>SetAngleServos</primary><secondary>Shooter</secondary></indexterm>
<indexterm><primary>Shooter</primary><secondary>SetAngleServos</secondary></indexterm>
<para><computeroutput>void Shooter::SetAngleServos (double angle)</computeroutput></para><para>

<para>Sets the shooting angle by using servos. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>angle</entry><entry>
<para>The angle to set the shooter to </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__shooter_8cpp_source_1l00095">95</link> of file <link linkend="__shooter_8cpp_source">Shooter.cpp</link>.</para>
</section>
<anchor xml:id="_class_shooter_1a25595e8df8cc799bc991ac94faf70f33"/><section>
    <title>SetAngleSolenoids()</title>
<indexterm><primary>SetAngleSolenoids</primary><secondary>Shooter</secondary></indexterm>
<indexterm><primary>Shooter</primary><secondary>SetAngleSolenoids</secondary></indexterm>
<para><computeroutput>void Shooter::SetAngleSolenoids (bool forward)</computeroutput></para><para>

<para>Sets the shooting angle by using solenoids. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>up</entry><entry>
<para>True to set the shooter to up, false to set it to down </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__shooter_8cpp_source_1l00123">123</link> of file <link linkend="__shooter_8cpp_source">Shooter.cpp</link>.</para>
</section>
<anchor xml:id="_class_shooter_1a8aec07b9a84ed0727abddf356898e9b3"/><section>
    <title>SetMotor()</title>
<indexterm><primary>SetMotor</primary><secondary>Shooter</secondary></indexterm>
<indexterm><primary>Shooter</primary><secondary>SetMotor</secondary></indexterm>
<para><computeroutput>void Shooter::SetMotor (double speed)</computeroutput></para><para>

<para>Sets the Motor speed. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>speed</entry><entry>
<para>Speed and direction to turn </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__shooter_8cpp_source_1l00020">20</link> of file <link linkend="__shooter_8cpp_source">Shooter.cpp</link>.</para>
</section>
<anchor xml:id="_class_shooter_1a89acb718cbf766d2f606927b0601c473"/><section>
    <title>SolenoidsOff()</title>
<indexterm><primary>SolenoidsOff</primary><secondary>Shooter</secondary></indexterm>
<indexterm><primary>Shooter</primary><secondary>SolenoidsOff</secondary></indexterm>
<para><computeroutput>void Shooter::SolenoidsOff ( )</computeroutput></para><para>

<para>Set the solenoids to kOff. </para>
</para>
<para>
Definition at line <link linkend="__shooter_8cpp_source_1l00137">137</link> of file <link linkend="__shooter_8cpp_source">Shooter.cpp</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
src/main/include/subsystems/<link linkend="__shooter_8h">Shooter.h</link>src/main/cpp/subsystems/<link linkend="__shooter_8cpp">Shooter.cpp</link></section>
</section>
