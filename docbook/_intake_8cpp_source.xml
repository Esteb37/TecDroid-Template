<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__intake_8cpp_source" xml:lang="en-US">
<title>Intake.cpp</title>
<indexterm><primary>src/main/cpp/subsystems/Intake.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__intake_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__intake_8h">subsystems/Intake.h</link>&quot;</emphasis>
<anchor xml:id="__intake_8cpp_source_1l00002"/>00002 
<anchor xml:id="__intake_8cpp_source_1l00003"/>00003 <emphasis role="keyword">using&#32;namespace&#32;</emphasis>frc;
<anchor xml:id="__intake_8cpp_source_1l00004"/>00004 
<anchor xml:id="__intake_8cpp_source_1l00005"/><link linkend="_class_intake_1a8d15418ed312a36eaac04f6ee45f58a9">00005</link> <link linkend="_class_intake_1a8d15418ed312a36eaac04f6ee45f58a9">Intake::Intake</link>()
<anchor xml:id="__intake_8cpp_source_1l00006"/>00006 {
<anchor xml:id="__intake_8cpp_source_1l00007"/>00007 }
<anchor xml:id="__intake_8cpp_source_1l00008"/>00008 
<anchor xml:id="__intake_8cpp_source_1l00009"/><link linkend="_class_intake_1a51e68973418d0795f74fde607d527b45">00009</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_intake_1a51e68973418d0795f74fde607d527b45">Intake::Periodic</link>()
<anchor xml:id="__intake_8cpp_source_1l00010"/>00010 {
<anchor xml:id="__intake_8cpp_source_1l00011"/>00011 }
<anchor xml:id="__intake_8cpp_source_1l00012"/>00012 
<anchor xml:id="__intake_8cpp_source_1l00013"/><link linkend="_class_intake_1a16ee13664c06c96e40e86ab277b4390b">00013</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_intake_1a16ee13664c06c96e40e86ab277b4390b">Intake::SetMotor</link>(<emphasis role="keywordtype">double</emphasis>&#32;speed)
<anchor xml:id="__intake_8cpp_source_1l00014"/>00014 {
<anchor xml:id="__intake_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;m_motor.Set(speed&#32;*&#32;<link linkend="__constants_8h_1acd1fbf774e9ebc6354c1569432aa21ee">k_intakeMaxSpeed</link>);
<anchor xml:id="__intake_8cpp_source_1l00016"/>00016 }
<anchor xml:id="__intake_8cpp_source_1l00017"/>00017 
<anchor xml:id="__intake_8cpp_source_1l00018"/><link linkend="_class_intake_1ae546a386d5e857d3e3735f6f6f1e9641">00018</link> <emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_class_intake_1ae546a386d5e857d3e3735f6f6f1e9641">Intake::GetMotor</link>()
<anchor xml:id="__intake_8cpp_source_1l00019"/>00019 {
<anchor xml:id="__intake_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_motor.Get();
<anchor xml:id="__intake_8cpp_source_1l00021"/>00021 }
<anchor xml:id="__intake_8cpp_source_1l00022"/>00022 
<anchor xml:id="__intake_8cpp_source_1l00023"/><link linkend="_class_intake_1a953ab3a33bde9b2dba2906e1f7ac6e82">00023</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_intake_1a953ab3a33bde9b2dba2906e1f7ac6e82">Intake::InvertMotor</link>(<emphasis role="keywordtype">bool</emphasis>&#32;inverted)
<anchor xml:id="__intake_8cpp_source_1l00024"/>00024 {
<anchor xml:id="__intake_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;m_motor.SetInverted(inverted);
<anchor xml:id="__intake_8cpp_source_1l00026"/>00026 }
<anchor xml:id="__intake_8cpp_source_1l00027"/>00027 
<anchor xml:id="__intake_8cpp_source_1l00028"/><link linkend="_class_intake_1a1ceb5141d0e918717a9d8fb2b8dfd52d">00028</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_intake_1a1ceb5141d0e918717a9d8fb2b8dfd52d">Intake::PrintMotor</link>()
<anchor xml:id="__intake_8cpp_source_1l00029"/>00029 {
<anchor xml:id="__intake_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;SmartDashboard::PutNumber(<emphasis role="stringliteral">&quot;Intake&#32;Motor&quot;</emphasis>,&#32;<link linkend="_class_intake_1ae546a386d5e857d3e3735f6f6f1e9641">GetMotor</link>());
<anchor xml:id="__intake_8cpp_source_1l00031"/>00031 }
<anchor xml:id="__intake_8cpp_source_1l00032"/>00032 
<anchor xml:id="__intake_8cpp_source_1l00033"/><link linkend="_class_intake_1ac1ae34fc447a63ee6472efaa5451aa05">00033</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_intake_1ac1ae34fc447a63ee6472efaa5451aa05">Intake::Take</link>()
<anchor xml:id="__intake_8cpp_source_1l00034"/>00034 {
<anchor xml:id="__intake_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<link linkend="_class_intake_1a16ee13664c06c96e40e86ab277b4390b">SetMotor</link>(1);
<anchor xml:id="__intake_8cpp_source_1l00036"/>00036 }
<anchor xml:id="__intake_8cpp_source_1l00037"/>00037 
<anchor xml:id="__intake_8cpp_source_1l00038"/><link linkend="_class_intake_1ad442c56ab0fd2ae81a57c5a68c6b26e4">00038</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_intake_1ad442c56ab0fd2ae81a57c5a68c6b26e4">Intake::Spit</link>()
<anchor xml:id="__intake_8cpp_source_1l00039"/>00039 {
<anchor xml:id="__intake_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;<link linkend="_class_intake_1a16ee13664c06c96e40e86ab277b4390b">SetMotor</link>(-1);
<anchor xml:id="__intake_8cpp_source_1l00041"/>00041 }
<anchor xml:id="__intake_8cpp_source_1l00042"/>00042 
<anchor xml:id="__intake_8cpp_source_1l00043"/><link linkend="_class_intake_1aaaa38297b57ce1279bd7fc71e5266517">00043</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_intake_1aaaa38297b57ce1279bd7fc71e5266517">Intake::Lower</link>()
<anchor xml:id="__intake_8cpp_source_1l00044"/>00044 {
<anchor xml:id="__intake_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_solenoidsInverted)
<anchor xml:id="__intake_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;{
<anchor xml:id="__intake_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_rightSolenoid.Set(DoubleSolenoid::Value::kForward);
<anchor xml:id="__intake_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_leftSolenoid.Set(DoubleSolenoid::Value::kForward);
<anchor xml:id="__intake_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;}
<anchor xml:id="__intake_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__intake_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;{
<anchor xml:id="__intake_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_rightSolenoid.Set(DoubleSolenoid::Value::kReverse);
<anchor xml:id="__intake_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_leftSolenoid.Set(DoubleSolenoid::Value::kReverse);
<anchor xml:id="__intake_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;}
<anchor xml:id="__intake_8cpp_source_1l00055"/>00055 }
<anchor xml:id="__intake_8cpp_source_1l00056"/>00056 
<anchor xml:id="__intake_8cpp_source_1l00057"/><link linkend="_class_intake_1a0fcddba2e99b1105ddd51727ad6a12fc">00057</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_intake_1a0fcddba2e99b1105ddd51727ad6a12fc">Intake::Raise</link>()
<anchor xml:id="__intake_8cpp_source_1l00058"/>00058 {
<anchor xml:id="__intake_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!m_solenoidsInverted)
<anchor xml:id="__intake_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;{
<anchor xml:id="__intake_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_rightSolenoid.Set(DoubleSolenoid::Value::kForward);
<anchor xml:id="__intake_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_leftSolenoid.Set(DoubleSolenoid::Value::kForward);
<anchor xml:id="__intake_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;}
<anchor xml:id="__intake_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__intake_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;{
<anchor xml:id="__intake_8cpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_rightSolenoid.Set(DoubleSolenoid::Value::kReverse);
<anchor xml:id="__intake_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_leftSolenoid.Set(DoubleSolenoid::Value::kReverse);
<anchor xml:id="__intake_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;}
<anchor xml:id="__intake_8cpp_source_1l00069"/>00069 }
<anchor xml:id="__intake_8cpp_source_1l00070"/>00070 
<anchor xml:id="__intake_8cpp_source_1l00071"/><link linkend="_class_intake_1a51af1ba44cc9ab4183cf5f52f70dbf3b">00071</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_intake_1a51af1ba44cc9ab4183cf5f52f70dbf3b">Intake::SolenoidsOff</link>()
<anchor xml:id="__intake_8cpp_source_1l00072"/>00072 {
<anchor xml:id="__intake_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;m_rightSolenoid.Set(DoubleSolenoid::Value::kOff);
<anchor xml:id="__intake_8cpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;m_leftSolenoid.Set(DoubleSolenoid::Value::kOff);
<anchor xml:id="__intake_8cpp_source_1l00075"/>00075 }
<anchor xml:id="__intake_8cpp_source_1l00076"/>00076 
<anchor xml:id="__intake_8cpp_source_1l00077"/><link linkend="_class_intake_1a5f824c78fb40c062e3bdfa1b127988e6">00077</link> <emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_intake_1a5f824c78fb40c062e3bdfa1b127988e6">Intake::GetRightSolenoid</link>()
<anchor xml:id="__intake_8cpp_source_1l00078"/>00078 {
<anchor xml:id="__intake_8cpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_rightSolenoid.Get();
<anchor xml:id="__intake_8cpp_source_1l00080"/>00080 }
<anchor xml:id="__intake_8cpp_source_1l00081"/>00081 
<anchor xml:id="__intake_8cpp_source_1l00082"/><link linkend="_class_intake_1ac581c392a353c4ed2b7e80a3445cb948">00082</link> <emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_intake_1ac581c392a353c4ed2b7e80a3445cb948">Intake::GetLeftSolenoid</link>()
<anchor xml:id="__intake_8cpp_source_1l00083"/>00083 {
<anchor xml:id="__intake_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_leftSolenoid.Get();
<anchor xml:id="__intake_8cpp_source_1l00085"/>00085 }
<anchor xml:id="__intake_8cpp_source_1l00086"/>00086 
<anchor xml:id="__intake_8cpp_source_1l00087"/><link linkend="_class_intake_1a5029eb2c22a00f819f546740928b110a">00087</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_intake_1a5029eb2c22a00f819f546740928b110a">Intake::PrintSolenoids</link>()
<anchor xml:id="__intake_8cpp_source_1l00088"/>00088 {
<anchor xml:id="__intake_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;SmartDashboard::PutNumber(<emphasis role="stringliteral">&quot;Intake&#32;Right&#32;Solenoid&quot;</emphasis>,&#32;<link linkend="_class_intake_1a5f824c78fb40c062e3bdfa1b127988e6">GetRightSolenoid</link>());
<anchor xml:id="__intake_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;SmartDashboard::PutNumber(<emphasis role="stringliteral">&quot;Intake&#32;Left&#32;Solenoid&quot;</emphasis>,&#32;<link linkend="_class_intake_1ac581c392a353c4ed2b7e80a3445cb948">GetLeftSolenoid</link>());
<anchor xml:id="__intake_8cpp_source_1l00091"/>00091 }
</programlisting></section>
